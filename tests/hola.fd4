#let hola = (let x:Nat = 2 in 3 )+ 1
#let ifzConResta = print "asdasd" (ifz (2 - 1) then 1 else 2)
#let ifzConResta2 = print "asdasd" (ifz (2 - 1) then (print "hola" 1) else (print "hola" 2))

#let suma = 1 + 1 + 1
#let sumaYResta = 1 + 1 - 10
#let sumaYRestaconPrint = 1 + 1 - (print "adasg" 1)
#let letTest = let x:Nat = 3 in x + 1
#let lamtest = (fun x:Nat -> 3) 2
#let ieTest = let (x:Nat->Nat) = fun (y:Nat) -> y + (1 + 1 + (1 + 1 + 1)) + 1 + (1 + 1 + 1) + 1 + 1 in x (x (x 2))


#let ggg (x:Nat) (f : Nat -> Nat) : Nat =
#  let x :Nat = (print "" 1) in
#  2

#let ggg2 (x:Nat) (f : Nat -> Nat) : Nat -> Nat =
#  let x :Nat = print "" (x+x+x+x+x+x) in
#  (fun (y:Nat) -> x+y)

  
let banana = (fun (y:Nat->Nat) -> print "" (y 1)) (fun (x:Nat) -> x + 1)
